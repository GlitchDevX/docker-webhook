name: Build Binaries
on: 
  push:
    branches: [main]

permissions: write-all

jobs:
  get-version-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.new_tag }}
    steps:
      - name: Get latest code
        uses: actions/checkout@v4

      - name: Bump version and push tag
        id: tag
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          PRERELEASE: true
      
      - name: Echo Tag to output
        run: |
          echo ${{ steps.tag.outputs.new_tag }}

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest code
        uses: actions/checkout@v4
      
      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install dependencies
        run: uv sync
      
      - name: Execute tests
        run: uv run pytest

  build-all:
    runs-on: ubuntu-latest
    needs: [get-version-tag, test]
    strategy:
      matrix:
        platform: [ubuntu-latest, ubuntu-22.04, ubuntu-24.04-arm, ubuntu-22.04-arm, windows-latest, macos-latest]
    steps:
      - name: Get latest code
        uses: actions/checkout@v4
      
      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install dependencies
        run: uv sync
      
      - name: Build binary
        run: uv run pyinstaller ./docker-webhook.spec
  
      - name: Rename binary
        run: mv dist/docker-webhook dist/docker-webhook-${{ needs.get-version-tag.outputs.tag }}-${{ matrix.platform }}

      - name: Upload build result
        uses: actions/upload-artifact@v4
        with:
          path: dist/docker-webhook-*
          name: docker-webhook-${{ needs.get-version-tag.outputs.tag }}-${{ matrix.platform }}

  release:
    runs-on: ubuntu-latest
    needs: [build-all, get-version-tag]
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: docker-webhook-${{ needs.get-version-tag.outputs.tag }}-*
          path: build-results

      - name: Check dir entries
        run: |
          ls
          echo "\n---\n"
          ls build-results

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.get-version-tag.outputs.tag }}
          append_body: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            build-results/**
